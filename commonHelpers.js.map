{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\n\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputDate = document.querySelector('#datetime-picker');\nconst buttonStart = document.querySelector('button');\nconst timerDays = document.querySelector('[data-days]');\nconst timerHours = document.querySelector('[data-hours]');\nconst timerMinutes = document.querySelector('[data-minutes]');\nconst timerSeconds = document.querySelector('[data-seconds]');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n  },\n};\nbuttonStart.disabled = true;\nconst calendar = flatpickr(inputDate, options);\n\ninputDate.addEventListener('change', () => {\n  let userSelectedDate = calendar.selectedDates[0];\n  if (userSelectedDate.getTime() <= Date.now()) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please choose a date in the future',\n    });\n    buttonStart.disabled = true;\n  } else {\n    buttonStart.disabled = false;\n  }\n});\n\nbuttonStart.addEventListener('click', event => {\n  event.preventDefault();\n  buttonStart.disabled = true;\n  inputDate.disabled = true;\n  let userSelectedDate = calendar.selectedDates[0];\n  let totalTime = 0;\n\n  const intervalId = setInterval(() => {\n    totalTime = userSelectedDate.getTime() - Date.now();\n    if (totalTime <= 0) {\n      clearInterval(intervalId);\n    } else {\n      let { days, hours, minutes, seconds } = convertMs(totalTime);\n      timerDays.textContent = days;\n      timerHours.textContent = hours;\n      timerMinutes.textContent = minutes;\n      timerSeconds.textContent = seconds;\n    }\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["inputDate","buttonStart","timerDays","timerHours","timerMinutes","timerSeconds","options","selectedDates","calendar","flatpickr","iziToast","event","userSelectedDate","totalTime","intervalId","days","hours","minutes","seconds","convertMs","ms"],"mappings":"2GAOA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,QAAQ,EAC7CC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAEtDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,EAAE,CAC7B,CACH,EACAN,EAAY,SAAW,GACvB,MAAMO,EAAWC,EAAUT,EAAWM,CAAO,EAE7CN,EAAU,iBAAiB,SAAU,IAAM,CAClBQ,EAAS,cAAc,GACzB,QAAO,GAAM,KAAK,IAAG,GACxCE,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACf,CAAK,EACDT,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE3B,CAAC,EAEDA,EAAY,iBAAiB,QAASU,GAAS,CAC7CA,EAAM,eAAc,EACpBV,EAAY,SAAW,GACvBD,EAAU,SAAW,GACrB,IAAIY,EAAmBJ,EAAS,cAAc,GAC1CK,EAAY,EAEhB,MAAMC,EAAa,YAAY,IAAM,CAEnC,GADAD,EAAYD,EAAiB,QAAS,EAAG,KAAK,IAAG,EAC7CC,GAAa,EACf,cAAcC,CAAU,MACnB,CACL,GAAI,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAS,EAC3DX,EAAU,YAAca,EACxBZ,EAAW,YAAca,EACzBZ,EAAa,YAAca,EAC3BZ,EAAa,YAAca,CAC5B,CACF,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUC,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}